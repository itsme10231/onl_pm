<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nl.onl.myPage">
	<!-- 	resultMap : property(dto의 맴버필드), column(DB컬럼명) -->
	<resultMap type="com.nl.onl.dtos.WantedDto" id="WantedDtoMap">
		<result property="seq" column="SEQ"/>
		<result property="id" column="ID"/>
		<result property="category" column="CATEGORY"/>
		<result property="title" column="TITLE"/>
		<result property="regdate" column="REGDATE"/>
		<result property="deadline" column="DEADLINE"/>
		<result property="sdate" column="SDATE"/>
		<result property="edate" column="EDATE"/>
		<result property="stime" column="STIME"/>
		<result property="etime" column="ETIME"/>
		<result property="salary" column="SALARY"/>
		<result property="content" column="CONTENT"/>
		<result property="phone" column="PHONE"/>
		<result property="views" column="VIEWS"/>
		<result property="state" column="STATE"/>
		<result property="delflag" column="DELFLAG"/>
		<result property="sosflag" column="SOSFLAG"/>
		<result property="location" column="LOCATION"/>
		<result property="selector" column="SELECTOR"/>
		<result property="whitelist" column="WHITELIST"/>
		<collection property="applyDto" resultMap="ApplyDtoMap"/>
	</resultMap>
	<resultMap type="com.nl.onl.dtos.ApplyDto" id="ApplyDtoMap">
		<result property="seq" column="SEQ"/>
		<result property="id" column="ID"/>
		<result property="wanted_seq" column="WANTED_SEQ"/>
		<result property="regdate" column="REGDATE"/>
<!-- 		<collection property="ScheduleDto" resultMap="appylistDtoMap"/> -->
	</resultMap>

<!-- 	내가 쓴 글 전체 보기(페이징) -->
	<select id="getAllMyList" resultMap="WantedDtoMap" parameterType="map">
		SELECT RN, wp.ID, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, wp.LOC_NAME, wp.SALARY, wp.STATE
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY REGDATE DESC) AS RN, wp.SEQ, wp.ID, wp.CATEGORY, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, lc.LOC_NAME, wp.STIME, wp.ETIME, 
			wp.SALARY, wp.CONTENT, wp.PHONE, wp.VIEWS, wp.STATE
			FROM WANTED_POST wp join LOCATION_CODE lc ON  wp.LOCATION = lc.LOC_CODE
			WHERE id=#{id}) wp
		WHERE CEIL(RN/10)=#{pnum}
	</select>
	
<!-- 	페이징 -->
	<select id="pcount" resultType="int" parameterType="String">
		SELECT CEIL(COUNT(seq)/10) FROM WANTED_POST WHERE id=#{id}
	</select>
	
<!-- 	공고 상세보기 -->
	<select id="detail" resultMap="WantedDtoMap" parameterType="String">
		SELECT w.TITLE, w.REGDATE, w.DEADLINE, w.CONTENT, l.LOC_NAME, w.SALARY, w2.co
		FROM WANTED_POST w, LOCATION_CODE l, (SELECT COUNT(a.ID) co, w.SEQ 
			FROM APPLYLIST a, WANTED_POST w 
			WHERE w.ID = #{id} AND a.WANTED_SEQ = w.SEQ 
			GROUP BY w.SEQ ) w2
		WHERE l.LOC_CODE = w.LOCATION AND w.SEQ = w2.seq  AND w.ID = #{id}
	</select>
	
<!-- 	현재 활성화 된 글 페이징-->	
	<select id="activation" resultMap="WantedDtoMap" parameterType="map">
		SELECT ac.RN, ac.SEQ, ac.ID, ac.CATEGORY, ac.TITLE, ac.REGDATE, ac.DEADLINE, ac.SDATE, ac.EDATE, ac.LOCATION, ac.STIME, ac.ETIME, ac.SALARY, ac.CONTENT, ac.PHONE, ac.VIEWS, ac.STATE, ac.DELFLAG, ac.SOSFLAG
		FROM WANTED_POST w, 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ,ID,CATEGORY,TITLE,REGDATE,DEADLINE,SDATE,EDATE,LOCATION,STIME,ETIME,SALARY,CONTENT,PHONE,VIEWS,STATE,DELFLAG,SOSFLAG
			FROM WANTED_POST
			WHERE ID =#{id} AND STATE ='WANTED' AND  DEADLINE &gt; SYSDATE) ac
		WHERE CEIL(RN/10)=#{pnum} AND ac.SEQ = w.SEQ 
	</select>
		
<!-- 	기간이 만료된 글 페이징-->
	<select id="expiration" resultMap="WantedDtoMap" parameterType="map">
		SELECT ac.RN, ac.SEQ, ac.ID, ac.CATEGORY, ac.TITLE, ac.REGDATE, ac.DEADLINE, ac.SDATE, ac.EDATE, ac.LOCATION, ac.STIME, ac.ETIME, ac.SALARY, ac.CONTENT, ac.PHONE, ac.VIEWS, ac.STATE, ac.DELFLAG, ac.SOSFLAG
		FROM WANTED_POST w, 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ,ID,CATEGORY,TITLE,REGDATE,DEADLINE,SDATE,EDATE,LOCATION,STIME,ETIME,SALARY,CONTENT,PHONE,VIEWS,STATE,DELFLAG,SOSFLAG
			FROM WANTED_POST
			WHERE ID =#{id} AND STATE ='WANTED' AND  DEADLINE &lt; SYSDATE) ac
		WHERE CEIL(RN/10)=#{pnum} AND ac.SEQ = w.SEQ 
	</select>
	
<!--미사용 	내가 지원한 구인 글 -->
<!-- 	<select id="myApply" resultMap="WantedDtoMap" parameterType="String"> -->
<!-- 	 	SELECT SEQ, ID, WANTED_SEQ, REGDATE -->
<!-- 		FROM APPLYLIST  -->
<!-- 		WHERE id=#{id} -->
<!-- 	</select> -->
	
<!--미사용 	구인글 별 지원자 수 -->
<!-- 	<select id="applyCount" resultMap="WantedDtoMap" parameterType="int"> -->
<!-- 		SELECT a.WANTED_SEQ, COUNT(a.seq) -->
<!-- 		FROM APPLYLIST a, (SELECT w.SEQ FROM WANTED_POST w WHERE w.STATE = 'WANTED' AND w.SEQ = #{seq}) -->
<!-- 		WHERE a.WANTED_SEQ = #{seq} -->
<!-- 		GROUP BY a.WANTED_SEQ  -->
<!-- 	</select> -->

<!-- 내가 지원한 구인글 별 지원자 수 페이징 -->
	<select id="myApplyCount" resultType="WantedDtoMap" parameterType="map">
		SELECT aaa.RN, aaa.ID, aaa.WANTED_SEQ, aaa.co as acount, aaa.REGDATE, aaa.TITLE, aaa.DEADLINE, aaa.SDATE, aaa.EDATE, aaa.SALARY, aaa.STATE, aaa.LOC_NAME
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY aa.WANTED_SEQ DESC) AS RN, aa.ID, aa.WANTED_SEQ, aa.REGDATE, ac.co, wan.TITLE, wan.DEADLINE, wan.SDATE, wan.EDATE, wan.SALARY, wan.STATE, lc.LOC_NAME 
			FROM APPLYLIST aa, WANTED_POST wan, LOCATION_CODE lc,
				(SELECT  a.WANTED_SEQ, COUNT(a.seq) co
				FROM APPLYLIST a
				GROUP BY a.WANTED_SEQ) ac
			WHERE aa.WANTED_SEQ = ac.WANTED_SEQ AND aa.WANTED_SEQ = wan.SEQ AND wan.LOCATION = lc.LOC_CODE AND aa.id=#{id}) aaa
		WHERE CEIL (RN/10)=#{pnum}
	</select>	
	
<!-- 	지원자 중 구직자 목록 페이징-->
	<select id="applylist" resultMap="WantedDtoMap" parameterType="map">
		SELECT ac.RN, ac.SEQ, ac.ID, ac.WANTED_SEQ, ac.REGDATE, whitelist
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY a.SEQ DESC) AS RN, a.SEQ, a.ID, a.WANTED_SEQ, a.REGDATE, NVL(l.TYPE,'N') AS whitelist
			FROM APPLYLIST a, WANTED_POST w, 
				(SELECT ID, LIST_ID, "TYPE" FROM USERLIST WHERE ID = #{id}) l
			WHERE a.WANTED_SEQ = w.SEQ AND l.list_id(+) = a.ID AND NVL(l.TYPE, 'N')!='B' AND w.SEQ = #{seq}) ac
		WHERE CEIL(RN/10)=#{pnum} 
	</select>
	
<!-- 	구직자 선택/변경 -->
	<update id="setSelector" parameterType="map">
		UPDATE WANTED_POST SET 
		SELECTOR = #{selector} 
		WHERE SEQ = #{seq}
	</update>
	
<!-- 	구직자 취소 -->
	<update id="changeSelector" parameterType="int">
		UPDATE WANTED_POST SET 
		SELECTOR = NULL 
		WHERE SEQ = #{seq}
	</update>
	
<!-- 	금액 변경 -->
	<update id="changeSalary" parameterType="map">
		UPDATE WANTED_POST 
		SET SALARY = #{salary} WHERE SEQ = #{seq}
	</update>
	
<!-- 	지원 취소 -->
	<delete id="applyCancel" parameterType="int">
		DELETE FROM APPLYLIST 
		WHERE SEQ = #{seq}
	</delete>
	
<!-- 	모집 취소 -->
	<update id="cancelWanted" parameterType="int"> 
		UPDATE WANTED_POST SET DELFLAG ='Y' WHERE SEQ = #{seq}
	</update>
	
<!-- 	내 평가보기(평가한거) 페이징-->
	<select id="getReview" resultType="ReviewDto" parameterType="map" >
		SELECT RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
			FROM REVIEW_POST
			WHERE ID = #{id}
			<if test="type!=null">
			 AND "TYPE" = #{type}
			</if>
			)
		WHERE CEIL(RN/10)=#{pnum}
	</select>
	
<!-- 	내 평가보기(평가받은거) 페이징-->
	<select id="receiveReview" resultType="ReviewDto" parameterType="map">
		SELECT RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
			FROM REVIEW_POST
			WHERE TARGET_ID = #{id} 
			<if test="type!=null">
			 AND "TYPE" = #{type}
			</if>
			)
		WHERE CEIL(RN/10)=#{pnum}
	</select>
	
<!-- 	찜글보기 페이징-->
<!-- 	<select id="getWishlist" resultType="" parameterType="map"> -->
<!-- 		SELECT RN, SEQ, ID, WANTED_SEQ -->
<!-- 		FROM  -->
<!-- 			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ, ID, WANTED_SEQ  -->
<!-- 			FROM WISHLIST  -->
<!-- 			WHERE ID = #{id}) -->
<!-- 		WHERE CEIL(RN/10)=#{pnum} -->
<!-- 	</select> -->
	
<!-- 	찜글삭제 -->
	<delete id="delWishlist" parameterType="int">
		DELETE FROM WISHLIST 
		WHERE SEQ = #{seq}
	</delete>
	
<!--미사용 	유저리스트 페이징-->
<!-- 	<select id="getUserlist" parameterType="String"> -->
<!-- 		SELECT RN, SEQ, ID, LIST_ID, "TYPE" -->
<!-- 		FROM  -->
<!-- 			(SELECT ROW_NUMBER () OVER(ORDER BY SEQ ) AS RN, SEQ, ID, LIST_ID, "TYPE"  -->
<!-- 			FROM USERLIST   -->
<!-- 			WHERE ID = #{id}) -->
<!-- 		WHERE CEIL(RN/10)=1 -->
<!-- 	</select> -->
	
<!-- 	유저리스트 페이징     수정-->
<!-- 	<select id="getUserlist" parameterType="map"> -->
<!-- 		SELECT RN, SEQ, ID, LIST_ID, "TYPE" -->
<!-- 		FROM  -->
<!-- 			(SELECT ROW_NUMBER () OVER(ORDER BY SEQ ) AS RN, SEQ, ID, LIST_ID, "TYPE"  -->
<!-- 			FROM USERLIST   -->
<!-- 			WHERE ID = #{id} -->
<!-- 				<if test="type!=null"> -->
<!-- 					<choose> -->
<!-- 						<when test="type.equals('B')"> -->
<!-- 							AND "TYPE" = 'B' -->
<!-- 						</when> -->
<!-- 						<otherwise> -->
<!-- 							AND "TYPE" = 'W' -->
<!-- 						</otherwise> -->
<!-- 					</choose> -->
<!-- 				</if>) -->
<!-- 		WHERE CEIL(RN/10)=#{pnum}	 -->
<!-- 	</select> -->
	
<!-- 	유저리스트삭제 -->
	<delete id="delUserlist" parameterType="int">
		DELETE FROM USERLIST 
		WHERE SEQ = #{seq}	
	</delete>
	
<!-- 	블랙/화이트리스트 변경 -->
	<update id="changeUserlist" parameterType="map">
		UPDATE USERLIST 
		SET "TYPE" = #{type} 
		WHERE SEQ = #{seq}
	</update>

<!-- 	블랙리스트 페이징-->
<!-- 	<select id="blackList" parameterType="int"> -->
<!-- 		SELECT RN, SEQ, LIST_ID -->
<!-- 		FROM  -->
<!-- 			(SELECT ROW_NUMBER () OVER (ORDER BY SEQ) AS RN, SEQ, LIST_ID -->
<!-- 			FROM USERLIST  -->
<!-- 			WHERE "TYPE" = 'B') -->
<!-- 		WHERE CEIL (RN/10)=#{pnum} -->
<!-- 	</select> -->

<!-- 	블랙리스트 -->
<!-- 	<select id="blackList"> -->
<!-- 		SELECT SEQ, LIST_ID -->
<!-- 		FROM USERLIST  -->
<!-- 		WHERE "TYPE" = 'B' -->
<!-- 	</select> -->

<!-- 	화이트리스트 페이징-->
<!-- 	<select id="whiteList" parameterType="int"> -->
<!-- 		SELECT RN, SEQ, LIST_ID -->
<!-- 		FROM  -->
<!-- 			(SELECT ROW_NUMBER () OVER (ORDER BY SEQ) AS RN,SEQ, LIST_ID -->
<!-- 			FROM USERLIST  -->
<!-- 			WHERE "TYPE" = 'W') -->
<!-- 		WHERE CEIL (RN/10)=#{pnum} -->
<!-- 	</select> -->

<!-- 	화이트리스트 -->
<!-- 	<select id="whiteList"> -->
<!-- 		SELECT SEQ, LIST_ID -->
<!-- 		FROM USERLIST  -->
<!-- 		WHERE "TYPE" = 'W' -->
<!-- 	</select> -->

</mapper>