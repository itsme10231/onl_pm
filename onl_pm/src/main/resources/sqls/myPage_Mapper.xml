<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nl.onl.myPage">
	<!-- 	resultMap : property(dto의 맴버필드), column(DB컬럼명) -->
	<resultMap type="WantedDto" id="WantedDtoMap">
		<result column="SEQ" property="seq"/>
		<result column="ID" property="id"/>
		<result column="CATEGORY" property="category"/>
		<result column="TITLE" property="title"/>
		<result column="REGDATE" property="regdate"/>
		<result column="DEADLINE" property="deadline"/>
		<result column="SDATE" property="sdate"/>
		<result column="EDATE" property="edate"/>
		<result column="LOCATION" property="location"/>
		<result column="STIME" property="stime"/>
		<result column="ETIME" property="etime"/>
		<result column="SALARY" property="salary"/>
		<result column="CONTENT" property="content"/>
		<result column="PHONE" property="phone"/>
		<result column="VIEWS" property="views"/>
		<result column="STATE" property="state"/>
		<result column="DELFLAG" property="delflag"/>
		<result column="SOSFLAG" property="sosflag"/>
		<result column="SELECTOR" property="selector"/>
		<result column="LOC_DETAIL" property="loc_detail"/>
		<result column="LOC_NAME" property="loc_name"/>
		<result column="WHITELIST" property="whitelist"/>
		<result column="WISHLIST" property="wishlist"/>
		<result column="RESULT_C" property="result_c"/>

		<result column="NICKNAME" property="nickname"/>
		<result column="APPLY" property="apply"/>
		<result column="APPLY_C" property="apply_c"/>
		<result column="SELECTED" property="selected"/>
		
		<result column="F_SEQ" property="fileDto.seq"/>
		<result column="ORIGIN_NAME" property="fileDto.origin_name"/>
		<result column="STORED_NAME" property="fileDto.stored_name"/>
		<result column="F_REGDATE" property="fileDto.regdate"/>
		<result column="F_DELFLAG" property="fileDto.delflag"/>
		<result column="BOARD_TYPE" property="fileDto.board_type"/>
		<result column="F_ID" property="fileDto.id"/>
		<result column="POST_SEQ" property="fileDto.post_seq"/>
		
		<collection property="categoryDto" resultMap="CategoryDtoMap"/>
	</resultMap>
	
	<resultMap type="FileDto" id="FileDtoMap">
		<result column="SEQ" property="seq"/>
		<result column="ORIGIN_NAME" property="origin_name"/>
		<result column="STORED_NAME" property="stored_name"/>
		<result column="REGDATE" property="regdate"/>
		<result column="DELFLAG" property="delflag"/>
		<result column="BOARD_TYPE" property="board_type"/>
		<result column="ID" property="id"/>
		<result column="POST_SEQ" property="post_seq"/>
	</resultMap>
	
	<resultMap type="com.nl.onl.dtos.ApplyDto" id="ApplyDtoMap">
		<result property="seq" column="SEQ"/>
		<result property="id" column="ID"/>
		<result property="wanted_seq" column="WANTED_SEQ"/>
		<result property="regdate" column="REGDATE"/>
<!-- 		<collection property="ScheduleDto" resultMap="appylistDtoMap"/> -->
	</resultMap>
	<resultMap type="com.nl.onl.dtos.WishDto" id="WishDtoMap">
		<result property="seq" column="SEQ"/>
		<result property="id" column="ID"/>
		<result property="wanted_seq" column="WANTED_SEQ"/>
		<collection property="wantedDto" resultMap="WantedDtoMap"/>
	</resultMap>
	
	<resultMap type="CategoryDto" id="CategoryDtoMap">
		<result column="CODE1" property="code1"/>
		<result column="CODE2" property="code2"/>
		<result column="CATEGORY_NAME1" property="category_name1"/>
		<result column="CATEGORY_NAME2" property="category_name2"/>
	</resultMap>

<!-- 	내가 쓴 글 전체 보기- 지원자 수 표시(페이징) -->
	<select id="getAllMyList" resultMap="WantedDtoMap" parameterType="map">
		
		SELECT RN, wp.SEQ, wp.ID, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.CATEGORY, wp.SDATE, wp.EDATE, wp.LOCATION, wp.LOC_DETAIL, wp.SALARY, wp.STATE, wp.NICKNAME, wp.CONTENT, wp.APPLY_C
		FROM (SELECT ROW_NUMBER() OVER(
			ORDER BY 
			<choose>
				<when test="sortType!=null and !sortType.equals('')">
					<choose>
						<when test="sortType.equals('DEADLINE')">
						wp.DEADLINE ASC
						</when>
						<when test="sortType.equals('APPLY_C')">
						a3.APPLY_C DESC
						</when>
					</choose>
				</when>
				<otherwise>
					wp.REGDATE DESC
				</otherwise>
			</choose>
		) AS RN, wp.SEQ, wp.ID, wp.CATEGORY, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, wp.LOCATION, wp.LOC_DETAIL, wp.STIME, wp.ETIME, 
			wp.SALARY, wp.CONTENT, wp.PHONE, wp.VIEWS, wp.STATE, m.NICKNAME , f.STORED_NAME, a3.APPLY_C
			FROM WANTED_POST wp, "MEMBER" m,
				(SELECT STORED_NAME, POST_SEQ
				 FROM (SELECT ROW_NUMBER() OVER(PARTITION BY POST_SEQ ORDER BY REGDATE ASC) AS RN_F, STORED_NAME, POST_SEQ 
						FROM UPLOAD_FILE 
						WHERE BOARD_TYPE = 'WANTED_POST' AND DELFLAG = 'N')
				 WHERE RN_F = 1) f,
				 (SELECT 	wp5.SEQ , COUNT(a2.ID) OVER(PARTITION BY a2.WANTED_SEQ) AS apply_c
				  FROM 		WANTED_POST wp5, APPLYLIST a2
				  WHERE 	wp5.ID = #{id} AND wp5.SEQ = a2.WANTED_SEQ(+)) a3
			WHERE wp.ID=#{id} AND wp.ID=m.ID AND wp.SEQ = a3.SEQ AND wp.SEQ = f.POST_SEQ(+)
				<if test="state!= null and !state.equals('')">
					AND STATE = #{state}
				</if>
			) wp
		WHERE CEIL(RN/5)=#{pnum}
		
	</select>
	

<!-- 	페이징 -->
	<select id="pcount" resultType="int" parameterType="map">
		SELECT CEIL(COUNT(seq)/5) FROM WANTED_POST WHERE id=#{id}
		<if test="state!= null and !state.equals('')">
			AND STATE = #{state}
		</if>
	</select>
	
<!-- 	공고 상세보기 -->
	<select id="detail" resultMap="WantedDtoMap" parameterType="String">
		SELECT w.TITLE, w.REGDATE, w.DEADLINE, w.CONTENT, w.LOCATION, w.LOC_DETAIL, w.SALARY, w2.co
		FROM WANTED_POST w, (SELECT COUNT(a.ID) co, w.SEQ 
			FROM APPLYLIST a, WANTED_POST w 
			WHERE w.ID = #{id} AND a.WANTED_SEQ = w.SEQ 
			GROUP BY w.SEQ ) w2
		WHERE w.SEQ = w2.seq  AND w.ID = #{id}
	</select>
	
<!-- 	현재 활성화 된 글 페이징-->	
	<select id="activation" resultMap="WantedDtoMap" parameterType="map">
		SELECT ac.RN, ac.SEQ, ac.ID, ac.CATEGORY, ac.TITLE, ac.REGDATE, ac.DEADLINE, ac.SDATE, ac.EDATE, ac.LOCATION, ac.LOC_DETAIL, ac.STIME, ac.ETIME, ac.SALARY, ac.CONTENT, ac.PHONE, ac.VIEWS, ac.STATE, ac.DELFLAG, ac.SOSFLAG
		FROM WANTED_POST w, 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ,ID,CATEGORY,TITLE,REGDATE,DEADLINE,SDATE,EDATE,LOCATION,LOC_DETAIL,STIME,ETIME,SALARY,CONTENT,PHONE,VIEWS,STATE,DELFLAG,SOSFLAG
			FROM WANTED_POST
			WHERE ID =#{id} AND STATE ='WANTED' AND  DEADLINE &gt; SYSDATE) ac
		WHERE CEIL(RN/10)=#{pnum} AND ac.SEQ = w.SEQ 
	</select>
		
<!-- 	기간이 만료된 글 페이징-->
	<select id="expiration" resultMap="WantedDtoMap" parameterType="map">
		SELECT ac.RN, ac.SEQ, ac.ID, ac.CATEGORY, ac.TITLE, ac.REGDATE, ac.DEADLINE, ac.SDATE, ac.EDATE, ac.LOCATION, ac.LOC_DETAIL, ac.STIME, ac.ETIME, ac.SALARY, ac.CONTENT, ac.PHONE, ac.VIEWS, ac.STATE, ac.DELFLAG, ac.SOSFLAG
		FROM WANTED_POST w, 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ,ID,CATEGORY,TITLE,REGDATE,DEADLINE,SDATE,EDATE,LOCATION,LOC_DETAIL,STIME,ETIME,SALARY,CONTENT,PHONE,VIEWS,STATE,DELFLAG,SOSFLAG
			FROM WANTED_POST
			WHERE ID =#{id} AND STATE ='WANTED' AND  DEADLINE &lt; SYSDATE) ac
		WHERE CEIL(RN/10)=#{pnum} AND ac.SEQ = w.SEQ 
	</select>
	
<!--미사용 	내가 지원한 구인 글 -->
<!-- 	<select id="myApply" resultMap="WantedDtoMap" parameterType="String"> -->
<!-- 	 	SELECT SEQ, ID, WANTED_SEQ, REGDATE -->
<!-- 		FROM APPLYLIST  -->
<!-- 		WHERE id=#{id} -->
<!-- 	</select> -->

<!--미사용 	구인글 별 지원자 수 -->
<!-- 	<select id="applyCount" resultMap="WantedDtoMap" parameterType="int"> -->
<!-- 		SELECT a.WANTED_SEQ, COUNT(a.seq) -->
<!-- 		FROM APPLYLIST a, (SELECT w.SEQ FROM WANTED_POST w WHERE w.STATE = 'WANTED' AND w.SEQ = #{seq}) -->
<!-- 		WHERE a.WANTED_SEQ = #{seq} -->
<!-- 		GROUP BY a.WANTED_SEQ  -->
<!-- 	</select> -->

<!-- 내가 지원한 구인글 별 지원자 수 페이징 -->
	<select id="myApplyCount" resultMap="WantedDtoMap" parameterType="map">
		SELECT aaa.RN, aaa.ID, aaa.WANTED_SEQ, aaa.SEQ, aaa.CATEGORY, aaa.co as apply_c, aaa.REGDATE, aaa.TITLE, aaa.DEADLINE, aaa.SDATE, aaa.EDATE, aaa.SALARY, aaa.STATE, aaa.LOCATION, aaa.LOC_DETAIL
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY 
			 <choose>
				<when test="sortType!=null and !sortType.equals('')">
					<choose>
						<when test="sortType.equals('DEADLINE')">
						wan.DEADLINE ASC
						</when>
						<when test="sortType.equals('APPLY_C')">
						ac.CO DESC
						</when>
					</choose>
				</when>
				<otherwise>
					wan.REGDATE DESC
				</otherwise>
			</choose>
			 ) AS RN, aa.ID, aa.WANTED_SEQ, wan.SEQ, wan.CATEGORY, wan.REGDATE, ac.co, wan.TITLE, wan.DEADLINE, wan.SDATE, wan.EDATE, wan.SALARY, wan.STATE, wan.LOCATION, wan.LOC_DETAIL 
			FROM APPLYLIST aa, WANTED_POST wan, 
				(SELECT  a.WANTED_SEQ, COUNT(a.seq) co
				FROM APPLYLIST a
				GROUP BY a.WANTED_SEQ) ac,
				(SELECT STORED_NAME, POST_SEQ
				 FROM (SELECT ROW_NUMBER() OVER(PARTITION BY POST_SEQ ORDER BY REGDATE ASC) AS RN_F, STORED_NAME, POST_SEQ 
						FROM UPLOAD_FILE 
						WHERE BOARD_TYPE = 'WANTED_POST' AND DELFLAG = 'N')
				 WHERE RN_F = 1) f
			WHERE aa.id=#{id} AND aa.WANTED_SEQ = ac.WANTED_SEQ AND aa.WANTED_SEQ = wan.SEQ AND aa.WANTED_SEQ = f.POST_SEQ(+)
				  <if test="state!=null and !state.equals('')">
				  AND wan.STATE = #{state}
				  </if>
				  ) aaa
		WHERE CEIL (RN/5)=#{pnum}
		
	</select>	
	
<!-- 	지원자 중 구직자 목록 페이징-->
	<select id="applylist" resultMap="WantedDtoMap" parameterType="map">
		SELECT ac.RN, ac.SEQ, ac.ID, ac.WANTED_SEQ, ac.REGDATE, whitelist
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY a.SEQ DESC) AS RN, a.SEQ, a.ID, a.WANTED_SEQ, a.REGDATE, NVL(l.TYPE,'N') AS whitelist
			FROM APPLYLIST a, WANTED_POST w, 
				(SELECT ID, LIST_ID, "TYPE" FROM USERLIST WHERE ID = #{id}) l
			WHERE a.WANTED_SEQ = w.SEQ AND l.list_id(+) = a.ID AND NVL(l.TYPE, 'N')!='B' AND w.SEQ = #{seq}) ac
		WHERE CEIL(RN/10)=#{pnum} 
	</select>
	
<!-- 	구직자 선택/변경 -->
	<update id="setSelector" parameterType="map">
		UPDATE WANTED_POST SET 
		SELECTOR = #{selector} 
		WHERE SEQ = #{seq}
	</update>
	
<!-- 	구직자 취소 -->
	<update id="cancelSelector" parameterType="int">
		UPDATE WANTED_POST SET 
		SELECTOR = NULL 
		WHERE SEQ = #{seq}
	</update>
	
<!-- 	금액 변경 -->
	<update id="changeSalary" parameterType="map">
		UPDATE WANTED_POST 
		SET SALARY = #{salary} WHERE SEQ = #{seq}
	</update>
	
<!-- 	지원 취소 -->
	<delete id="applyCancel" parameterType="int">
		DELETE FROM APPLYLIST 
		WHERE SEQ = #{seq}
	</delete>
	
<!-- 	모집 취소 -->
	<update id="cancelWanted" parameterType="int"> 
		UPDATE WANTED_POST SET DELFLAG ='Y' WHERE SEQ = #{seq}
	</update>
	
<!-- 	내 평가보기(평가한거) 페이징-->
	<select id="getReview" resultType="ReviewDto" parameterType="map" >
		SELECT RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
			FROM REVIEW_POST
			WHERE ID = #{id}
			<if test="type!=null">
			 AND "TYPE" = #{type}
			</if>
			)
		WHERE CEIL(RN/10)=#{pnum}
	</select>
	
<!-- 	내 평가보기(평가받은거) 페이징-->
	<select id="receiveReview" resultType="ReviewDto" parameterType="map">
		SELECT RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
		FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ, ID, TARGET_ID, "TYPE", CONTENT, SCORE, WANTED_SEQ, REGDATE, DELFLAG
			FROM REVIEW_POST
			WHERE TARGET_ID = #{id} 
			<if test="type!=null">
			 AND "TYPE" = #{type}
			</if>
			)
		WHERE CEIL(RN/#{printnum})=#{pnum}
	</select>
	
<!-- 	리뷰 상세보기: 내가 받은 리뷰목록에서 바로 열람가능 -->


	
<!-- 	찜글보기 페이징 수정-->
	<select id="getWishlist" resultMap="WishDtoMap" parameterType="map">
		SELECT ws.RN, ws.SEQ, ws.WANTED_SEQ, wp.TITLE, wp.ID, wp.DEADLINE, wp.SALARY, wp.STATE 
		FROM WANTED_POST wp,
			(SELECT ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS RN, SEQ, ID, WANTED_SEQ 
			FROM WISHLIST 
			WHERE ID = #{id}) ws
		WHERE CEIL(RN/10)=#{pnum} AND ws.WANTED_SEQ = wp.SEQ
	</select>
	


	
<!-- 	찜글삭제 -->
	<delete id="delWishlist" parameterType="int">
		DELETE FROM WISHLIST 
		WHERE SEQ = #{seq}
	</delete>
	
<!--미사용 	유저리스트 페이징-->
<!-- 	<select id="getUserlist" parameterType="String"> -->
<!-- 		SELECT RN, SEQ, ID, LIST_ID, "TYPE" -->
<!-- 		FROM  -->
<!-- 			(SELECT ROW_NUMBER () OVER(ORDER BY SEQ ) AS RN, SEQ, ID, LIST_ID, "TYPE"  -->
<!-- 			FROM USERLIST   -->
<!-- 			WHERE ID = #{id}) -->
<!-- 		WHERE CEIL(RN/10)=1 -->
<!-- 	</select> -->
	
<!-- 	유저리스트 페이징     -->
	<select id="getUserlist" resultType="UserlistDto" parameterType="map">
		SELECT RN, SEQ, ID, LIST_ID, "TYPE", STORED_NAME
		FROM 
			(SELECT ROW_NUMBER () OVER(ORDER BY SEQ ) AS RN, u.SEQ, f.ID, u.LIST_ID, u."TYPE" , f.STORED_NAME
			FROM USERLIST u, "MEMBER" m , 
				 (SELECT STORED_NAME, POST_SEQ, ID
				 FROM (SELECT ROW_NUMBER() OVER(PARTITION BY POST_SEQ ORDER BY REGDATE ASC) AS RN_F, STORED_NAME, POST_SEQ , ID
						FROM UPLOAD_FILE 
						WHERE BOARD_TYPE = 'PROFILE' AND DELFLAG = 'N')
				 WHERE RN_F = 1) f
			WHERE u.ID = #{id} AND u.LIST_ID = m.ID AND u.LIST_ID = f.ID
				<if test="type!=null and !type.equals('')">
					<choose>
						<when test="type.equals('B')">
							AND u."TYPE" = 'B'
						</when>
						<otherwise>
							AND u."TYPE" = 'W'
						</otherwise>
					</choose>
				</if>)
		WHERE CEIL(RN/12)=#{pnum}	
	</select>
	
<!-- 	유저리스트삭제 -->
	<delete id="delUserlist" parameterType="int">
		DELETE FROM USERLIST 
		WHERE SEQ = #{seq}	
	</delete>
	
<!-- 	블랙/화이트리스트 변경 -->
	<update id="changeUserlist" parameterType="map">
		UPDATE USERLIST 
		SET "TYPE" = #{type} 
		WHERE SEQ = #{seq}
	</update>
	
	<select id="getUserlistCount" resultType="int" parameterType="map">
		SELECT	CEIL(COUNT(LIST_ID)/9)
		FROM 	USERLIST
		WHERE 	ID = #{id}
		<if test="type!=null and !type.equals('')">
			<choose>
				<when test="type.equals('B')">
					AND "TYPE" = 'B'
				</when>
				<otherwise>
					AND "TYPE" = 'W'
				</otherwise>
			</choose>
		</if>
	</select>


</mapper>