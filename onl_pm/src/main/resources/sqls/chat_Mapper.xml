<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nl.onl.chat">
	
<!-- 메시지 받아오기(현재 접속한 유저는 onltest1) -->
	<select id="getMessage" resultType="ChatDto" parameterType="map">	
		SELECT 	c.SEQ , c.CONTENT , c.CHATDATE, c.CHKFLAG , m1.NICKNAME as r_nickname, m2.NICKNAME as s_nickname
		FROM 	CHAT_LOG c, "MEMBER" m1, "MEMBER" m2
		WHERE 	c.RECEIVE_ID = m1.ID AND
				c.SEND_ID = m2.ID
				(c.RECEIVE_ID = #{receive_id} AND c.SEND_ID = #{send_id}) OR 
				(c.RECEIVE_ID = #{send_id} AND c.SEND_ID = #{receive_id}) AND 
				c.DELFLAG = 'N' 
		ORDER BY c.CHATDATE ASC
	</select>
	
<!-- 메시지 받아오면 chkflag 'Y'로 변경 -->
	<update id="checkChkflag" parameterType="map">	
		UPDATE CHAT_LOG SET CHKFLAG = 'Y' WHERE RECEIVE_ID = #{receive_id} AND SEND_ID = #{send_id} AND CHKFLAG = 'N'
	</update>
	
<!-- 메시지 보내기	 -->
	<insert id="sendMessage" parameterType="ChatDto">
		INSERT INTO CHAT_LOG VALUES
		(chat_log_SEQ.nextval, #{receive_id}, #{send_id}, #{content}, sysdate, 'N', #{delflag}, #{wanted_seq})
	</insert>
	
<!-- 	받는 회원이 탈퇴했거나 정지상태거나 블랙리스트에 등록되었을 경우 -->
	<select id="checkDelflag" resultType="String" parameterType="map">
		SELECT 	m.ID 
		FROM 	MEMBER m
		WHERE 	m.DELFLAG = 'Y' AND m.ID = #{target_id} AND 
				EXISTS	(SELECT ID 
						 FROM 	USERLIST 
						 WHERE 	TYPE = 'B' AND ((ID = #{target_id} AND LIST_ID = #{id}) OR (ID = #{id} AND LIST_ID = #{target_id})))
	</select>
	
	
<!-- 채팅리스트(onltest1) -->
<!-- 타겟아이디 | 구인글 번호 | 내가 확인안한 메시지 수 | 마지막메시지 | 마지막 메시지 시간 -->
	<select id="getChatlist" resultType="ChatlistDto" parameterType="map">
		SELECT 	list.TARGET, m.NICKNAME , list.WANTED_SEQ, list.TITLE, list.NOTREAD_C, list.CONTENT, list.CHATDATE
		FROM 	"MEMBER" m,
				(SELECT	ROW_NUMBER() OVER(ORDER BY l2.CHATDATE DESC) AS RO, CASE l2.RECEIVE_ID WHEN #{id} THEN l2.SEND_ID ELSE l2.RECEIVE_ID END AS target, l2.WANTED_SEQ, l2.TITLE, l2.NOTREAD_C, l2.CONTENT, l2.CHATDATE
				 FROM	(SELECT ROW_NUMBER() OVER(PARTITION BY cl1.WANTED_SEQ ORDER BY CHATDATE DESC) AS rn, cl1.WANTED_SEQ, cl1.RECEIVE_ID , cl1.SEND_ID , NOTREAD_C, cl1.CONTENT , cl1.CHATDATE , wp.TITLE 
						FROM 	CHAT_LOG cl1 ,  WANTED_POST wp ,
								(SELECT SUM(NVL(NOTREAD_C, 0)) OVER(PARTITION BY c1.WANTED_SEQ ) AS notread_c, c1.WANTED_SEQ
								 FROM 	CHAT_LOG c1, 
										(SELECT WANTED_SEQ, COUNT(*) AS notread_c, RECEIVE_ID 
										 FROM 	CHAT_LOG 
										 WHERE	RECEIVE_ID = #{id} AND CHKFLAG = 'N' 
										 GROUP BY WANTED_SEQ, RECEIVE_ID) c2 
								 WHERE (c1.RECEIVE_ID = #{id} OR c1.SEND_ID = #{id}) AND c1.CHKFLAG = 'N' AND c1.WANTED_SEQ = c2.WANTED_SEQ(+) 
								 GROUP BY c1.WANTED_SEQ, NOTREAD_C) cl2
						WHERE (RECEIVE_ID = #{id} OR SEND_ID = #{id}) AND cl1.WANTED_SEQ  = cl2.WANTED_SEQ AND cl1.WANTED_SEQ = wp.SEQ ) l2
				 WHERE 	RN = 1
				 ORDER BY l2.CHATDATE DESC) list
		WHERE	list.TARGET = m.ID AND CEIL(list.RO/10) = #{pnum}
	</select> 	
	
<!-- 채팅리스트 페이징 넘버 -->
	<select id="getPaging" parameterType="String" resultType="int">
		SELECT 	COUNT(*) 
		FROM 	(SELECT	CASE l2.RECEIVE_ID WHEN #{id} THEN l2.SEND_ID ELSE l2.RECEIVE_ID END AS target, l2.WANTED_SEQ, l2.TITLE, l2.NOTREAD_C, l2.CONTENT, l2.CHATDATE
				 FROM	(SELECT ROW_NUMBER() OVER(PARTITION BY cl1.WANTED_SEQ ORDER BY CHATDATE DESC) AS rn, cl1.WANTED_SEQ, cl1.RECEIVE_ID , cl1.SEND_ID , NOTREAD_C, cl1.CONTENT , cl1.CHATDATE , wp.TITLE 
						FROM 	CHAT_LOG cl1 ,  WANTED_POST wp ,
								(SELECT SUM(NVL(NOTREAD_C, 0)) OVER(PARTITION BY c1.WANTED_SEQ ) AS notread_c, c1.WANTED_SEQ
								 FROM 	CHAT_LOG c1, 
										(SELECT WANTED_SEQ, COUNT(*) AS notread_c, RECEIVE_ID 
										 FROM 	CHAT_LOG 
										 WHERE	RECEIVE_ID = #{id} AND CHKFLAG = 'N' 
										 GROUP BY WANTED_SEQ, RECEIVE_ID) c2 
								 WHERE (c1.RECEIVE_ID = #{id} OR c1.SEND_ID = #{id}) AND c1.CHKFLAG = 'N' AND c1.WANTED_SEQ = c2.WANTED_SEQ(+) 
								 GROUP BY c1.WANTED_SEQ, NOTREAD_C) cl2
						WHERE (RECEIVE_ID = #{id} OR SEND_ID = #{id}) AND cl1.WANTED_SEQ  = cl2.WANTED_SEQ AND cl1.WANTED_SEQ = wp.SEQ ) l2
				 WHERE 	RN = 1)
	</select>
</mapper>