<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nl.onl.wanted">
	
	
	
	<resultMap type="WantedDto" id="WantedDtoMap">
		<result column="SEQ" property="seq"/>
		<result column="ID" property="id"/>
		<result column="CATEGORY" property="category"/>
		<result column="TITLE" property="title"/>
		<result column="REGDATE" property="regdate"/>
		<result column="DEADLINE" property="deadline"/>
		<result column="SDATE" property="sdate"/>
		<result column="EDATE" property="edate"/>
		<result column="LOCATION" property="location"/>
		<result column="STIME" property="stime"/>
		<result column="ETIME" property="etime"/>
		<result column="SALARY" property="salary"/>
		<result column="CONTENT" property="content"/>
		<result column="PHONE" property="phone"/>
		<result column="VIEWS" property="views"/>
		<result column="STATE" property="state"/>
		<result column="DELFLAG" property="delflag"/>
		<result column="SOSFLAG" property="sosflag"/>
		<result column="SELECTOR" property="selector"/>
		<result column="LOC_DETAIL" property="loc_detail"/>
		<result column="LOC_NAME" property="loc_name"/>
		<result column="WHITELIST" property="whitelist"/>
		<result column="WISHLIST" property="wishlist"/>
		<result column="RESULT_C" property="result_c"/>

		<result column="NICKNAME" property="nickname"/>
		<result column="APPLY" property="apply"/>
		<result column="APPLY_C" property="apply_c"/>
		<result column="SELECTED" property="selected"/>
		
		<result column="F_SEQ" property="fileDto.seq"/>
		<result column="ORIGIN_NAME" property="fileDto.origin_name"/>
		<result column="STORED_NAME" property="fileDto.stored_name"/>
		<result column="F_REGDATE" property="fileDto.regdate"/>
		<result column="F_DELFLAG" property="fileDto.delflag"/>
		<result column="BOARD_TYPE" property="fileDto.board_type"/>
		<result column="F_ID" property="fileDto.id"/>
		<result column="POST_SEQ" property="fileDto.post_seq"/>
		
		<collection property="categoryDto" resultMap="CategoryDtoMap"/>
	</resultMap>
	
	<resultMap type="FileDto" id="FileDtoMap">
		<result column="F_SEQ" property="seq"/>
		<result column="ORIGIN_NAME" property="origin_name"/>
		<result column="STORED_NAME" property="stored_name"/>
		<result column="F_REGDATE" property="regdate"/>
		<result column="F_DELFLAG" property="delflag"/>
		<result column="BOARD_TYPE" property="board_type"/>
		<result column="F_ID" property="id"/>
		<result column="POST_SEQ" property="post_seq"/>
	</resultMap>
	
	<resultMap type="CategoryDto" id="CategoryDtoMap">
		<result column="CODE1" property="code1"/>
		<result column="CODE2" property="code2"/>
		<result column="CATEGORY_NAME1" property="category_name1"/>
		<result column="CATEGORY_NAME2" property="category_name2"/>
	</resultMap>
	<!-- 검색기능 쿼리 -->
	
	<!-- 비로그인 구인글 목록보기&검색(timezone은 8자리의 숫자형태, String 타입) -->
	<select id="getWantedList" resultMap="WantedDtoMap" parameterType="SearchDto">
		SELECT	RN, SEQ , ID, NICKNAME, CATEGORY, CATEGORY_NAME1, CATEGORY_NAME2, TITLE , REGDATE , DEADLINE , LOCATION , LOC_DETAIL, SALARY , VIEWS, SOSFLAG , STORED_NAME, RESULT_C
		FROM	(SELECT ROW_NUMBER() OVER(
							PARTITION BY w.SOSFLAG
							ORDER BY w.SOSFLAG DESC 
							<choose>
								<when test="sortType!=null">
									<choose>
										<when test="sortType.equals('salary')">
									, w.SALARY
										<choose>
											<when test="align.equals('asc')">
											ASC
											</when>
											<otherwise>
											DESC
											</otherwise>
										</choose>
									</when>
									<when test="sortType.equals('time')">
									, (TO_DATE(w.ETIME,'HH24MI')-TO_DATE(w.STIME,'HH24MI'))
										<choose>
											<when test="align.equals('asc')">
											ASC
											</when>
											<otherwise>
											DESC
											</otherwise>
										</choose>
									</when>
									</choose>
								</when>
								<otherwise>
								, w.REGDATE DESC
								</otherwise>
							</choose>	
						) AS RN, w.SEQ , w.ID, m.NICKNAME, w.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, w.TITLE , w.REGDATE , w.DEADLINE , w.LOCATION , w.LOC_DETAIL, w.SALARY , w.VIEWS , w.SOSFLAG , f.STORED_NAME, COUNT(w.SEQ) OVER() AS RESULT_C
				FROM 	WANTED_POST w, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2, "MEMBER" m
						, (SELECT STORED_NAME, POST_SEQ
							FROM (SELECT ROW_NUMBER() OVER(PARTITION BY POST_SEQ ORDER BY REGDATE ASC) AS RN_F, STORED_NAME, POST_SEQ 
									FROM UPLOAD_FILE 
									WHERE BOARD_TYPE = 'WANTED_POST' AND DELFLAG = 'N')
							WHERE RN_F = 1) f
						<if test="score!=null">
						, (SELECT TRUNC(AVG(SCORE),1) AS SCORE, TARGET_ID FROM REVIEW_POST GROUP BY TARGET_ID) r 
						</if>
				WHERE 	w.DELFLAG = 'N' AND w.STATE = 'WANTED' AND w.DEADLINE &gt;= SYSDATE AND SUBSTR(w.CATEGORY, 1, 1) = wc1.CODE AND w.CATEGORY = wc2.CODE AND w.ID = m.ID AND w.SEQ = f.POST_SEQ(+)
						<if test="score!=null">
							AND w.ID = r.TARGET_ID(+) AND NVL(r.SCORE, 0) &gt;= #{score}
						</if>

						<if test="title!=null">
							AND w.TITLE LIKE '%'||#{title}||'%'
						</if>
						<if test="category!=null">
							AND
							<foreach collection="category" item="type" open="(" close=")" separator=" OR ">
								 w.CATEGORY LIKE #{category}||'%'
							</foreach>
						</if>
						<if test="salary!=null">
							AND w.SALARY &gt;= #{salary}
						</if>
						<if test="timezone!=null">
							AND w.STIME &gt;= SUBSTR(#{timezone}, 1, 4) AND w.ETIME &lt;= SUBSTR(#{timezone}, 5, 8)
						</if>
						<if test="time!=null">
							AND (TO_DATE(w.ETIME,'HH24MI')-TO_DATE(w.STIME,'HH24MI'))*24*60 &lt;= #{time}*60
						</if>
						<if test="location!=null">
							AND w.LOCATION||' '||w.LOC_DETAIL LIKE '%'||#{location}||'%'
						</if>
						)
		WHERE 	(CEIL(RN/20) = #{pnum} AND SOSFLAG = 'N') OR (CEIL(RN/9) = #{pnum} AND SOSFLAG = 'Y') 
		ORDER BY SOSFLAG DESC, RN ASC
	</select>
	
	<!-- 로그인 구인글 목록보기&검색 -->
	<select id="getWantedListLogin" parameterType="SearchDto" resultMap="WantedDtoMap">
		SELECT	RN, SEQ , ID, NICKNAME, CATEGORY, CATEGORY_NAME1, CATEGORY_NAME2, TITLE , REGDATE , DEADLINE , LOCATION , LOC_DETAIL, SALARY , VIEWS, SOSFLAG , STORED_NAME, RESULT_C
		FROM	(SELECT ROW_NUMBER() OVER(
						PARTITION BY wp.SOSFLAG
						ORDER BY wp.SOSFLAG DESC
							<choose>
								<when test="sortType!=null">
									<choose>
										<when test="sortType.equals('salary')">
									, wp.SALARY
										<choose>
											<when test="align.equals('asc')">
											ASC
											</when>
											<otherwise>
											DESC
											</otherwise>
										</choose>
									</when>
									<when test="sortType.equals('time')">
									, (TO_DATE(wp.ETIME,'HH24MI')-TO_DATE(wp.STIME,'HH24MI'))
										<choose>
											<when test="align.equals('asc')">
											ASC
											</when>
											<otherwise>
											DESC
											</otherwise>
										</choose>
									</when>
									</choose>
								</when>
								<otherwise>
								, wp.REGDATE DESC
								</otherwise>
							</choose>	
						) as RN, wp.SEQ , wp.ID, m.NICKNAME, wp.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, wp.TITLE , wp.REGDATE , wp.DEADLINE , wp.LOCATION , wp.LOC_DETAIL, wp.SALARY , wp.VIEWS, wp.SOSFLAG , f.STORED_NAME,
						CASE
							WHEN EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.ID = #{id} AND ul."TYPE" = 'W' AND ul.LIST_ID = wp.ID) THEN 'Y'
							ELSE 'N'
						END AS WHITELIST,
						CASE
							WHEN EXISTS (SELECT 1 FROM WISHLIST w WHERE w.ID = #{id} AND w.WANTED_SEQ = wp.SEQ) THEN 'Y'
							ELSE 'N'
						END AS WISHLIST, COUNT(wp.SEQ) OVER() AS RESULT_C
				FROM 	WANTED_POST wp, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2, "MEMBER" m
						, (SELECT STORED_NAME, POST_SEQ
							FROM (SELECT ROW_NUMBER() OVER(PARTITION BY POST_SEQ ORDER BY REGDATE ASC) AS RN_F, STORED_NAME, POST_SEQ 
									FROM UPLOAD_FILE 
									WHERE BOARD_TYPE = 'WANTED_POST' AND DELFLAG = 'N')
							WHERE RN_F = 1) f
						<if test="score!=null">
						,(SELECT TRUNC(AVG(SCORE),1) AS SCORE, TARGET_ID FROM REVIEW_POST GROUP BY TARGET_ID) r 
						</if>
				WHERE 	wp.DELFLAG = 'N' AND wp.STATE = 'WANTED' AND wp.DEADLINE >= SYSDATE AND SUBSTR(wp.CATEGORY, 1, 1) = wc1.CODE AND wp.CATEGORY = wc2.CODE AND wp.ID = m.ID
						AND NOT EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.ID = #{id} AND ul."TYPE" = 'B' AND ul.LIST_ID = wp.ID) 
						AND NOT EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.LIST_ID = #{id} AND ul."TYPE" = 'B' AND ul.ID = wp.ID)
						<if test="score!=null">
							AND wp.ID = r.TARGET_ID(+) AND NVL(r.SCORE, 0) &gt;= #{score}
						</if>
						<if test="title!=null">
							AND wp.TITLE LIKE '%'||#{title}||'%'
						</if>
						<if test="category!=null">
							AND wp.CATEGORY LIKE #{category}||'%'
						</if>
						<if test="salary!=null">
							AND wp.SALARY &gt;= #{salary}
						</if>
						<if test="timezone!=null">
							AND wp.STIME &gt;= SUBSTR(#{timezone}, 1, 4) AND wp.ETIME &lt;= SUBSTR(#{timezone}, 5, 8)
						</if>
						<if test="time!=null">
							AND (TO_DATE(wp.ETIME,'HH24MI')-TO_DATE(wp.STIME,'HH24MI'))*24*60 &lt;= #{time}*60
						</if>
						<if test="location!=null">
							AND wp.LOCATION||' '||wp.LOC_DETAIL LIKE '%'||#{location}||'%'
						</if>
						 AND wp.SEQ = f.POST_SEQ(+)
						)
		WHERE 	(CEIL(RN/20) = #{pnum} AND SOSFLAG = 'N') OR (CEIL(RN/9) = #{pnum} AND SOSFLAG = 'Y') 
		ORDER BY SOSFLAG DESC, RN ASC
	</select>
	
	<!-- 비로그인 구인글 상세보기 -->
	<select id="getWantedDetail" parameterType="String" resultMap="WantedDtoMap">
		SELECT 	wp.SEQ, wp.ID, wp.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, wp.TITLE, 
				wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, 
				wp.LOCATION, wp.LOC_DETAIL, wp.STIME, wp.ETIME, wp.SALARY, 
				wp.CONTENT, wp.PHONE, wp.VIEWS, wp.STATE, wp.SOSFLAG, f.STORED_NAME , f.REGDATE AS F_REGDATE, f.SEQ AS F_SEQ, m.NICKNAME
		FROM 	WANTED_POST wp, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2, "MEMBER" m,
				(SELECT STORED_NAME, POST_SEQ , REGDATE , SEQ
				 FROM UPLOAD_FILE 
				 WHERE BOARD_TYPE = 'WANTED_POST' AND DELFLAG = 'N') f
		WHERE 	wp.SEQ = #{seq} AND SUBSTR(wp.CATEGORY, 1, 1) = wc1.CODE AND wp.CATEGORY = wc2.CODE AND wp.ID = m.ID AND wp.SEQ = f.POST_SEQ(+)
		ORDER BY f.REGDATE ASC
	</select>
	
	<!-- 로그인 구인글 상세보기 -->
	<select id="getWantedDetailLogin" parameterType="map" resultMap="WantedDtoMap">
		SELECT 	wp.SEQ, wp.ID, wp.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, wc1.CODE as CODE1, wc2.CODE as CODE2, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, wp.LOCATION, wp.LOC_DETAIL, wp.STIME, wp.ETIME, wp.SALARY, wp.CONTENT, wp.PHONE, wp.VIEWS, wp.STATE, wp.DELFLAG, wp.SOSFLAG, APPLY_C, 
				CASE 
					WHEN EXISTS (SELECT 1 FROM APPLYLIST a WHERE a.ID = #{id} AND a.WANTED_SEQ = wp.SEQ) THEN 'Y'
					ELSE 'N'
				END AS APPLY,
				CASE 
					WHEN wp.SELECTOR = #{id} THEN 'Y'
					ELSE 'N'
				END AS SELECTED,
				CASE
					WHEN EXISTS (SELECT 1 FROM WISHLIST w WHERE w.ID = #{id} AND w.WANTED_SEQ = wp.SEQ) THEN 'Y'
					ELSE 'N'
				END AS WISHLIST,
				CASE
					WHEN EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.ID = #{id} AND ul."TYPE" = 'W' AND ul.LIST_ID = wp.ID) THEN 'Y'
					ELSE 'N'
				END AS WHITELIST,
				f.STORED_NAME , f.REGDATE AS F_REGDATE, f.SEQ AS F_SEQ, m.NICKNAME
		FROM 	WANTED_POST wp, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2, "MEMBER" m,
				(SELECT COUNT(a2.ID) AS apply_c, a2.WANTED_SEQ FROM APPLYLIST a2 where a2.WANTED_SEQ = #{seq} GROUP BY a2.WANTED_SEQ ) a3,
				(SELECT uf.STORED_NAME, uf.POST_SEQ , uf.REGDATE, uf.SEQ
				 FROM UPLOAD_FILE uf
				 WHERE uf.BOARD_TYPE = 'WANTED_POST' AND uf.DELFLAG = 'N') f
		WHERE 	wp.SEQ = #{seq} AND SUBSTR(wp.CATEGORY, 1, 1) = wc1.CODE AND wp.CATEGORY = wc2.CODE AND wp.ID = m.ID AND wp.SEQ = a3.WANTED_SEQ(+) AND wp.SEQ = f.POST_SEQ(+)

	</select>
	
	<!-- 구인글 상세보기 공통(조회수 증가) -->
	<update id="increaseView" parameterType="String">
		UPDATE 	WANTED_POST 
		SET 	VIEWS = VIEWS+1 
		WHERE 	SEQ = #{seq}
	</update>
	
	<!-- 지역별 공고 숫자 보기(미구현) -->
	
	
	<!-- ........................................................................... -->
	<!-- 구인글 작성 -->
	<insert id="insertWanted" parameterType="WantedDto">
		INSERT INTO WANTED_POST 
		VALUES (
				WANTED_POST_SEQ.NEXTVAL, #{id}, #{category}, 
				#{title}, SYSDATE, #{deadline}, #{sdate}, 
				#{edate}, #{stime}, #{etime}, #{salary}, 
				#{content}, 0, 'WANTED', 'N', #{sosflag}, NULL, #{loc_detail}, #{phone}, #{location}
				)
	</insert>
	
	<!-- 카테고리 목록 가져오기(구인글 작성시 카테고리 선택에 보조, 페이지 헤더에 출력) -->
	<select id="getCategory" resultType="CategoryDto">
		SELECT 	w1.CODE AS CODE1, 
				CASE w1.CATEGORY_NAME WHEN LAG(w1.CATEGORY_NAME, 1)
				OVER(ORDER BY w1.CODE ASC) THEN ' '
				ELSE w1.CATEGORY_NAME
				END CATEGORY_NAME1
				, w2.CODE AS CODE2, w2.CATEGORY_NAME AS CATEGORY_NAME2
		FROM 	WANTED_CATEGORY1 w1, WANTED_CATEGORY2 w2
		WHERE 	w1.CODE = SUBSTR(w2.CODE, 1, 1) 
		ORDER BY w1.CODE ASC , w2.CODE DESC
	</select>
	
	
	<!-- 내가 쓴 구인글 서식 가져오기 -->
	<select id="getMyDoc" parameterType="String" resultType="WantedDto">
		SELECT	wp.SEQ, wp.CATEGORY, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, wp.STIME, wp.ETIME, wp.SALARY, wp.CONTENT, wp.LOCATION, wp.LOC_DETAIL 
		FROM 	WANTED_POST wp
		WHERE 	wp.ID = #{id}
	</select>
	
	
	<!-- 지역코드 매칭(구인글 작성, 수정과 함께 트랜잭션 처리) -->
<!-- 	<select id="getLocCode" parameterType="String" resultType="int"> -->
<!-- 		SELECT	LOC_CODE -->
<!-- 		FROM	LOCATION_CODE -->
<!-- 		WHERE 	LOC_NAME LIKE #{loc_name} -->
<!-- 	</select> -->
	
	
	<!-- 구인글 수정 -->
	<update id="updateWanted" parameterType="WantedDto">
		UPDATE 	WANTED_POST 
		SET 	<if test="category!=null">CATEGORY = #{category},</if>
				<if test="title!=null">TITLE = #{title},</if>
				<if test="regdate!=null">REGDATE = SYSDATE,</if>
				<if test="deadline!=null">DEADLINE = #{deadline},</if>
				<if test="sdate!=null">SDATE = #{sdate},</if>
				<if test="edate!=null">EDATE = #{edate},</if>
				<if test="stime!=null">STIME = #{stime},</if>
				<if test="etime!=null">ETIME = #{etime},</if>
				<if test="salary!=null">SALARY = #{salary},</if>
				<if test="content!=null">CONTENT = #{content},</if>
				<if test="sosflag!=null">SOSFLAG = #{sosflag},</if>
				<if test="loc_detail!=null">LOC_DETAIL = #{loc_detail},</if>
				<if test="location!=null">LOCATION = #{location}</if>	
		WHERE 	SEQ = #{seq}
	</update>
	
	<!-- 구인글 삭제 -->
	<update id="deleteWanted" parameterType="String">
		UPDATE 	WANTED_POST
		SET 	DELFLAG = 'Y'
		WHERE 	SEQ = #{seq}
	</update>
	
	
	
	

	
	<!-- 구인글 지원 -->
	<insert id="insertApply" parameterType="ApplyDto">
		INSERT INTO APPLYLIST 
		VALUES (
				APPLYLIST_SEQ.NEXTVAL, #{id}, #{wanted_seq}, SYSDATE
				)
	</insert>
	
	<!-- 지원 취소 -->
	<delete id="deleteApply" parameterType="map">
		DELETE FROM APPLYLIST WHERE WANTED_SEQ = #{wanted_seq} AND ID = #{id}
	</delete>
	
	<!-- 취소하려는 지원이 이미 선정된 구직자의 지원이었다면 -->
	<update id="cancelSelector" parameterType="map">
		UPDATE 	WANTED_POST 
		SET 	SELECTOR = NULL, STATE = 'WANTED'
		WHERE 	SEQ = #{wanted_seq} AND SELECTOR = #{id}
	</update>
	
	<!-- 지원자 선정 -->
	<update id="pickSelector" parameterType="map">
		UPDATE WANTED_POST 
		SET SELECTOR = #{id}, STATUS = 'PROCESS'
		WHERE SEQ = #{wanted_seq}
	</update>
	
	<!-- 일 완료 -->
	<update id="updateStatus" parameterType="map">
		UPDATE WANTED_POST 
		SET STATUS = #{state}
		WHERE SEQ = #{seq}
	</update>
	
	<!-- 후기 작성 -->
	<insert id="insertReview" parameterType="ReviewDto">
		INSERT INTO REVIEW_POST
		VALUES (
				REVIEW_POST_SEQ.NEXTVAL, #{id}, #{target_id}, #{type}, 
				#{content}, #{score}, #{wanted_seq}, SYSDATE, 'N'
				)
	</insert>
	
	<!-- 후기 삭제 -->
	<update id="deleteReview" parameterType="String">
		UPDATE REVIEW_POST
		SET DELFLAG = 'Y'
		WHERE SEQ = #{seq}
	</update>
	
	
	<!-- 찜글 선택 -->
	<insert id="insertWish" parameterType="WishDto">
		INSERT INTO WISHLIST VALUES(
			WISHLIST_SEQ.NEXTVAL, #{id}, #{wanted_seq}
		)
	</insert>
	
	<!-- 찜글 삭제 -->
	<delete id="delWishList" parameterType="map">
		DELETE FROM WISHLIST 
		WHERE ID = #{id} AND WANTED_SEQ = #{wanted_seq}
	</delete>
</mapper>