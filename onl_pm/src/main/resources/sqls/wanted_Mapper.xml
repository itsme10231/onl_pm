<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nl.onl.wanted">
	
	<!-- 검색기능 쿼리 -->
	
	<!-- 비로그인 구인글 목록보기&검색(timezone은 8자리의 숫자형태, String 타입) -->
	<select id="getWantedList" resultType="WantedDto" parameterType="map">
		SELECT 	w.SEQ , w.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, w.TITLE , w.REGDATE , w.DEADLINE , l.LOC_NAME , w.LOC_DETAIL, w.SALARY , w.VIEWS , w.SOSFLAG 
		FROM 	WANTED_POST w, LOCATION_CODE l, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2
				<if test="score!=null">
				,(SELECT TRUNC(AVG(SCORE),1) AS SCORE, TARGET_ID FROM REVIEW_POST GROUP BY TARGET_ID) r 
				</if>
		WHERE 	w.DELFLAG = 'N' AND w.STATE = 'WANTED' AND w.DEADLINE &gt;= SYSDATE AND w.LOCATION = l.LOC_CODE AND SUBSTR(w.CATEGORY, 1, 1) = wc1.CODE AND w.CATEGORY = wc2.CODE
				<if test="score!=null">
					AND w.ID = r.TARGET_ID(+) AND NVL(r.SCORE, 0) &gt;= #{score}
				</if>
				<if test="target_id!=null">
					AND w.ID = '%'||#{target_id}||'%'
				</if>
				<if test="category!=null">
					AND w.CATEGORY = #{category}||'%'
				</if>
				<if test="salary!=null">
					AND w.SALARY &gt;= #{salary}
				</if>
				<if test="timezone!=null">
					AND w.STIME &gt;= SUBSTR(#{timezone}, 1, 4) AND w.ETIME &lt;= SUBSTR(#{timezone}, 5, 8)
				</if>
				<if test="time!=null">
					AND (TO_DATE(w.ETIME,'HH24MI')-TO_DATE(w.STIME,'HH24MI'))*24*60 &lt;= #{time}*60
				</if>
				<if test="location!=null">
					AND l.LOC_NAME = '%'||#{location}||'%'
				</if>
		
		ORDER BY w.SOSFLAG DESC,  w.REGDATE DESC	
	</select>
	
	<!-- 로그인 구인글 목록보기&검색 -->
	<select id="getWantedListLogin" parameterType="map" resultType="WantedDto">
		SELECT 	wp.SEQ , wp.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, wp.TITLE , wp.REGDATE , wp.DEADLINE , lc.LOC_NAME , wc.LOC_DETAIL, wp.SALARY , wp.VIEWS, wp.ID , wp.SOSFLAG ,
				CASE
					WHEN EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.ID = #{id} AND ul."TYPE" = 'W' AND ul.LIST_ID = wp.ID) THEN 'Y'
					ELSE 'N'
				END AS WHITELIST,
				CASE
					WHEN EXISTS (SELECT 1 FROM WISHLIST w WHERE w.ID = #{id} AND w.WANTED_SEQ = wp.SEQ) THEN 'Y'
					ELSE 'N'
				END AS WISHLIST
		FROM 	WANTED_POST wp, LOCATION_CODE lc, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2
				<if test="score!=null">
				,(SELECT TRUNC(AVG(SCORE),1) AS SCORE, TARGET_ID FROM REVIEW_POST GROUP BY TARGET_ID) r 
				</if>
		WHERE 	wp.DELFLAG = 'N' AND wp.STATE = 'WANTED' AND wp.DEADLINE >= SYSDATE AND wp.LOCATION = lc.LOC_CODE AND SUBSTR(wp.CATEGORY, 1, 1) = wc1.CODE AND wp.CATEGORY = wc2.CODE AND
				NOT EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.ID = #{id} AND ul."TYPE" = 'B' AND ul.LIST_ID = wp.ID) AND 
				NOT EXISTS (SELECT 1 FROM USERLIST ul WHERE ul.LIST_ID = #{id} AND ul."TYPE" = 'B' AND ul.ID = wp.ID)
				<if test="score!=null">
					AND wp.ID = r.TARGET_ID(+) AND NVL(r.SCORE, 0) &gt;= #{score}
				</if>
				<if test="target_id!=null">
					AND wp.ID = '%'||#{target_id}||'%'
				</if>
				<if test="category!=null">
					AND wp.CATEGORY = #{category}||'%'
				</if>
				<if test="salary!=null">
					AND wp.SALARY &gt;= #{salary}
				</if>
				<if test="timezone!=null">
					AND wp.STIME &gt;= SUBSTR(#{timezone}, 1, 4) AND wp.ETIME &lt;= SUBSTR(#{timezone}, 5, 8)
				</if>
				<if test="time!=null">
					AND (TO_DATE(wp.ETIME,'HH24MI')-TO_DATE(wp.STIME,'HH24MI'))*24*60 &lt;= #{time}*60
				</if>
				<if test="location!=null">
					AND lc.LOC_NAME = '%'||#{location}||'%'
				</if>
		ORDER BY wp.SOSFLAG DESC,  wp.REGDATE DESC
	</select>
	
	
	<!-- 비로그인 구인글 상세보기 -->
	<select id="getWantedDetail" parameterType="int" resultType="WantedDto">
		SELECT 	wp.SEQ, wp.ID, wp.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, wp.TITLE, 
				wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, 
				lc.LOC_NAME, wp.LOC_DETAIL, wp.STIME, wp.ETIME, wp.SALARY, 
				wp.CONTENT, wp.PHONE, wp.VIEWS, wp.STATE, wp.SOSFLAG
		FROM 	WANTED_POST wp, LOCATION_CODE lc, WANTED_CATEGORY1 wc
		WHERE 	wp.SEQ = #{seq} AND wp.LOCATION = lc.LOC_CODE AND SUBSTR(wp.CATEGORY, 1, 1) = wc1.CODE AND wp.CATEGORY = wc2.CODE
	</select>
	
	<!-- 로그인 구인글 상세보기 -->
	<select id="getWantedDetailLogin" parameterType="map" resultType="WantedDto">
		SELECT 	wp.SEQ, wp.ID, wp.CATEGORY, wc1.CATEGORY_NAME as CATEGORY_NAME1, wc2.CATEGORY_NAME as CATEGORY_NAME2, wp.TITLE, wp.REGDATE, wp.DEADLINE, wp.SDATE, wp.EDATE, lc.LOC_NAME, wp.LOC_DETAIL, wp.STIME, wp.ETIME, wp.SALARY, wp.CONTENT, wp.PHONE, wp.VIEWS, wp.STATE, wp.DELFLAG, wp.SOSFLAG, APPLY_C, 
				CASE 
					WHEN EXISTS (SELECT 1 FROM APPLYLIST a WHERE a.ID = #{id} AND a.WANTED_SEQ = wp.SEQ) THEN 'Y'
					ELSE 'N'
				END AS APPLY,
				CASE 
					WHEN EXISTS (SELECT 1 FROM APPLYLIST a WHERE a.ID = #{id} AND a.SEQ = wp.SELECTOR ) THEN 'Y'
					ELSE 'N'
				END AS SELECTED
		FROM 	WANTED_POST wp, LOCATION_CODE lc, WANTED_CATEGORY1 wc1, WANTED_CATEGORY2 wc2,
				(SELECT COUNT(a2.ID) AS apply_c, a2.WANTED_SEQ FROM APPLYLIST a2 where a2.WANTED_SEQ = #{seq} GROUP BY a2.WANTED_SEQ ) a3
		WHERE 	wp.SEQ = #{seq} AND wp.LOCATION  = lc.LOC_CODE AND wp.SEQ = a3.WANTED_SEQ AND SUBSTR(wp.CATEGORY, 1, 1) = wc1.CODE AND wp.CATEGORY = wc2.CODE
	</select>
	
	<!-- 구인글 상세보기 공통(조회수 증가) -->
	<update id="increaseView" parameterType="int">
		UPDATE 	WANTED_POST 
		SET 	VIEWS = VIEWS+1 
		WHERE 	SEQ = #{seq}
	</update>
	
	<!-- 지역별 공고 숫자 보기(미구현) -->
	
	
	<!-- ........................................................................... -->
	<!-- 구인글 작성 -->
	<insert id="insertWanted" parameterType="WantedDto">
		INSERT INTO WANTED_POST (SEQ, ID, CATEGORY, TITLE, REGDATE, DEADLINE, SDATE, EDATE, LOCATION, STIME, ETIME, SALARY, CONTENT, PHONE, VIEWS, STATE, DELFLAG, SOSFLAG, SELECTOR, LOC_DETAIL)
		VALUES (
				WANTED_POST_SEQ.NEXTVAL, #{id}, #{category}, 
				#{title}, SYSDATE, #{deadline}, #{sdate}, 
				#{edate}, #{location}, #{stime}, #{etime}, #{salary}, 
				#{content}, #{phone}, #{views}, #{status}, #{delflag}, #{sosflag}, NULL, #{loc_detail}
				)
	</insert>
	
	<!-- 카테고리 목록 가져오기(구인글 작성시 카테고리 선택에 보조, 페이지 헤더에 출력) -->
	<select id="getCategory" resultType="CategoryDto">
		SELECT 	w1.CODE AS CODE1, 
		CASE w1.CATEGORY_NAME WHEN LAG(w1.CATEGORY_NAME, 1)
		OVER(ORDER BY w1.CODE ASC) THEN ' '
		ELSE w1.CATEGORY_NAME
		END CATEGORY_NAME1
		, w2.CODE AS CODE2, w2.CATEGORY_NAME AS CATEGORY_NAME2
		FROM 	WANTED_CATEGORY1 w1, WANTED_CATEGORY2 w2
		WHERE 	w1.CODE = SUBSTR(w2.CODE, 1, 1) 
		ORDER BY w1.CODE ASC , w2.CODE DESC
	</select>
	
	
	<!-- 구인글 수정 -->
	<update id="updateWanted" parameterType="WantedDto">
		UPDATE 	WANTED_POST 
		SET 	CATEGORY = #{category},
				TITLE = #{title},
				REGDATE = SYSDATE,
				DEADLINE = #{deadline},
				SDATE = #{sdate},
				EDATE = #{edate},
				LOCATION = #{location},
				STIME = #{stime},
				ETIME = #{etime},
				SALARY = #{salary},
				CONTENT = #{content},
				SOSFLAG = #{sosflag},
				LOC_DETAIL = #{loc_detail}
		WHERE 	SEQ = #{seq}
	</update>
	
	<!-- 구인글 삭제 -->
	<update id="deleteWanted" parameterType="String">
		UPDATE 	WANTED_POST
		SET 	DELFLAG = 'Y'
		WHERE 	SEQ = #{seq}
	</update>
	
	<!-- 구인글 지원 -->
	<insert id="insertApply" parameterType="ApplyDto">
		INSERT INTO APPLYLIST 
		VALUES (
				APPLYLIST_SEQ.NEXTVAL, #{id}, #{wanted_seq}, SYSDATE
				)
	</insert>
	
	<!-- 지원 취소 -->
	<delete id="deleteApply" parameterType="int">
		DELETE FROM APPLYLIST WHERE SEQ = #{seq}
	</delete>
	
	<!-- 취소하려는 지원이 이미 선정된 구직자의 지원이었다면 -->
	<update id="cancelSelector" parameterType="int">
		UPDATE 	WANTED_POST 
		SET 	SELECTOR = NULL
		WHERE 	SEQ = #{seq}
	</update>
	
	<!-- 지원자 선정 -->
	<update id="pickSelector" parameterType="map">
		UPDATE WANTED_POST 
		SET SELECTOR = #{seq}, STATUS = 'PROCESS'
		WHERE SEQ = #{wanted_seq}
	</update>
	
	<!-- 일 완료 -->
	<update id="updateStatus" parameterType="int">
		UPDATE WANTED_POST 
		SET STATUS = 'COMPLETE'
		WHERE SEQ = #{seq}
	</update>
	
	<!-- 후기 작성 -->
	<insert id="insertReview" parameterType="ReviewDto">
		INSERT INTO REVIEW_POST
		VALUES (
				REVIEW_POST_SEQ.NEXTVAL, #{id}, #{target_id}, #{type}, 
				#{content}, #{score}, #{wanted_seq}, SYSDATE, 'N'
				)
	</insert>
	
	<!-- 후기 삭제 -->
	<update id="deleteReview" parameterType="int">
		UPDATE REVIEW_POST
		SET DELFLAG = 'Y'
		WHERE SEQ = #{seq}
	</update>
</mapper>