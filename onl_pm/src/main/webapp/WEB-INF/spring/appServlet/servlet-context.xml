<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.nl.onl" />
	
	<!-- 웹소켓 핸들러 -->
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/chat"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- 
		multipart 요청정보를 얻기 위한 객체 작업
		maxUploadSize: 최대업로드 가능한 바이트 크기
		maxInUploadSize: 디스크에 임시 파일을 생성하기 전에 메모리에 보관할 수 있는 최대 크기
		
		multipart의 지원기능을 사용하려면Resolver를 등록해야 한다.
		DispatcherServlet이 "multipartResolver"라는 이름의 빈을 사용하기 때문에 반드시 아이디에 multipartResolver로 설정한다.
	 -->
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="4096000"/>
		<beans:property name="maxInMemorySize" value="1048000"/>
	</beans:bean>
	
	
	<!-- @Controller, @Service, @Repository 어노테이션으로 선언한 클래스들을 컴포넌트 스캔으로 자동 등록 -->
	<context:component-scan base-package="com.nl.onl" />
	
</beans:beans>
